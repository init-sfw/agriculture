/*
 * PhonePanel.java
 *
 * Created on 17 de enero de 2008, 14:52
 */
package ar.com.init.agros.util.gui.components.personas;

import ar.com.init.agros.model.Telefono;
import ar.com.init.agros.util.gui.GUIUtility;
import java.util.List;
import java.util.Vector;
import javax.swing.JButton;
import javax.swing.ListSelectionModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author  Fede
 */
public class PhonePanel extends javax.swing.JPanel
{
    private boolean consulta;

    /** Creates new form PhonePanel */
    public PhonePanel()
    {
        initComponents();
        ListSelectionModel rowsModel = tablePhone.getSelectionModel();
        rowsModel.addListSelectionListener(new ListSelectionListener()
        {

            @Override
            public void valueChanged(ListSelectionEvent e)
            {
                if (e.getValueIsAdjusting())
                {
                    return;
                }
                if (tablePhone.getSelectedRows().length >= 1 && !consulta)
                {
                    btnRemovePhone.setEnabled(true);
                }
                else
                {
                    btnRemovePhone.setEnabled(false);
                }
            }
        });
    }

    public JButton getBtnNewPhone()
    {
        return btnNewPhone;
    }

    public void setBtnNewPhone(JButton btnNewPhone)
    {
        this.btnNewPhone = btnNewPhone;
    }

    public JButton getBtnRemovePhone()
    {
        return btnRemovePhone;
    }

    public void setBtnRemovePhone(JButton btnRemovePhone)
    {
        this.btnRemovePhone = btnRemovePhone;
    }

    public boolean isConsulta()
    {
        return consulta;
    }

    public void setConsulta(boolean consulta)
    {
        this.consulta = consulta;
    }

    /** Método que se encarga de recibir un vector de teléfonos para inicializar el panel con los datos de los mismos
     * @param telefonos el Vector de telefonos con el que se desea inicializar el panel
     */
    public void initPhones(List<Telefono> telefonos)
    {
        ((DefaultTableModel) tablePhone.getModel()).setRowCount(telefonos.size());
        for (int i = 0; i < telefonos.size(); i++)
        {
            setValueToModel(telefonos.get(i).getCaracteristica(), i, "Característica");
            setValueToModel(telefonos.get(i).getNumero(), i, "Número");
            setValueToModel(telefonos.get(i).getTipo(), i, "Tipo");
        }
    }

    private void setValueToModel(Object value, int viewRow, String identifier)
    {
        GUIUtility.setValueToModel(tablePhone, value, viewRow, identifier);
    }

    private Object getValueFromModel(int viewRow, String identifier)
    {
        return GUIUtility.getValueFromModel(tablePhone, viewRow, identifier);
    }

    /** Método que devuelve los teléfonos que se han cargado en el panel
     * @return el Vector de teléfonos cargados en el panel
     */
    public List<Telefono> getTelefonos()
    {
        List<Telefono> list = new Vector<Telefono>(tablePhone.getRowCount());
        for (int i = 0; i < tablePhone.getRowCount(); i++)
        {
            if (verifyInput(i))
            {
                list.add(new Telefono((String) getValueFromModel(i, "Tipo"), String.valueOf(getValueFromModel(i, "Característica")), String.valueOf(getValueFromModel(i, "Número"))));
            }
        }
        if (list.size() == 0)
        {
            return null;
        }
        return list;
    }

    /** Método que elimina todas las filas la tabla de teléfonos */
    public void cleanPhones()
    {
        GUIUtility.clearTable(tablePhone);
    }

    private void deleteRow()
    {
        if (tablePhone.getRowCount() > 0 && tablePhone.getSelectedRow() != -1)
        {
            GUIUtility.removeRowFromTable(tablePhone, tablePhone.getSelectedRow());
        }
    }

    /** Método que agrega una nueva fila a la tabla */
    private void addRow()
    {
        if (tablePhone.getRowCount() == 0)
        {
            GUIUtility.addRowToTable(tablePhone);
        }
        else
        {
            if (verifyInput(tablePhone.getRowCount() - 1))
            {
                GUIUtility.addRowToTable(tablePhone);
            }
        }
    }

    public void disableFields()
    {
        btnNewPhone.setEnabled(false);
        btnRemovePhone.setEnabled(false);
        tablePhone.setEditable(false);
        consulta = true;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        phoneTableCellEditor1 = new ar.com.init.agros.util.gui.components.personas.PhoneTableCellEditor();
        phoneTableRenderer1 = new ar.com.init.agros.util.gui.components.personas.PhoneTableRenderer();
        btnNewPhone = new javax.swing.JButton();
        btnRemovePhone = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablePhone = new org.jdesktop.swingx.JXTable();

        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("ar/com/init/agros/util/gui/components/personas/Bundle"); // NOI18N
        phoneTableRenderer1.setText(bundle.getString("PhonePanel.phoneTableRenderer1.text")); // NOI18N

        setBorder(javax.swing.BorderFactory.createTitledBorder(bundle.getString("PhonePanel.border.title"))); // NOI18N

        btnNewPhone.setFont(new java.awt.Font("Verdana", 0, 11));
        btnNewPhone.setText(bundle.getString("PhonePanel.btnNewPhone.text")); // NOI18N
        btnNewPhone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewPhoneActionPerformed(evt);
            }
        });

        btnRemovePhone.setFont(new java.awt.Font("Verdana", 0, 11));
        btnRemovePhone.setText(bundle.getString("PhonePanel.btnRemovePhone.text")); // NOI18N
        btnRemovePhone.setEnabled(false);
        btnRemovePhone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemovePhoneActionPerformed(evt);
            }
        });

        tablePhone.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Característica", "Número", "Tipo"
            }
        ));
        tablePhone.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(tablePhone);
        tablePhone.getColumnModel().getColumn(0).setHeaderValue(bundle.getString("PhonePanel.tablePhone.columnModel.title0")); // NOI18N
        tablePhone.getColumnModel().getColumn(0).setCellEditor(phoneTableCellEditor1);
        tablePhone.getColumnModel().getColumn(0).setCellRenderer(phoneTableRenderer1);
        tablePhone.getColumnModel().getColumn(1).setHeaderValue(bundle.getString("PhonePanel.tablePhone.columnModel.title1")); // NOI18N
        tablePhone.getColumnModel().getColumn(1).setCellEditor(phoneTableCellEditor1);
        tablePhone.getColumnModel().getColumn(1).setCellRenderer(phoneTableRenderer1);
        tablePhone.getColumnModel().getColumn(2).setHeaderValue(bundle.getString("PhonePanel.tablePhone.columnModel.title2")); // NOI18N
        tablePhone.getColumnModel().getColumn(2).setCellRenderer(phoneTableRenderer1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 267, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnNewPhone)
                    .addComponent(btnRemovePhone)))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnNewPhone, btnRemovePhone});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnNewPhone)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnRemovePhone))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 108, Short.MAX_VALUE))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnNewPhoneActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnNewPhoneActionPerformed
    {//GEN-HEADEREND:event_btnNewPhoneActionPerformed
        addRow();
        btnRemovePhone.setEnabled(true);
    }//GEN-LAST:event_btnNewPhoneActionPerformed

    private void btnRemovePhoneActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnRemovePhoneActionPerformed
    {//GEN-HEADEREND:event_btnRemovePhoneActionPerformed
        deleteRow();
        if (tablePhone.getRowCount() < 1)
        {
            btnRemovePhone.setEnabled(false);
        }
    }//GEN-LAST:event_btnRemovePhoneActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnNewPhone;
    private javax.swing.JButton btnRemovePhone;
    private javax.swing.JScrollPane jScrollPane2;
    private ar.com.init.agros.util.gui.components.personas.PhoneTableCellEditor phoneTableCellEditor1;
    private ar.com.init.agros.util.gui.components.personas.PhoneTableRenderer phoneTableRenderer1;
    private org.jdesktop.swingx.JXTable tablePhone;
    // End of variables declaration//GEN-END:variables

    private boolean verifyInput(int row)
    {
        if (getValueFromModel(row, "Característica") == null || String.valueOf(getValueFromModel(row, "Característica")).trim().equals("") || getValueFromModel(row, "Número") == null || String.valueOf(getValueFromModel(row, "Número")).trim().equals(""))
        {
            return false;
        }
        else
        {
            return true;
        }
    }
}
