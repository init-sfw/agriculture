/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package ar.com.init.agros.view.costos;

import ar.com.init.agros.model.Siembra;
import ar.com.init.agros.util.gui.validation.components.FrameNotifier;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import ar.com.init.agros.util.gui.AbstractEventControl;
import ar.com.init.agros.util.gui.GUIUtility;
import java.awt.Window;

/*
 * Clase GUI DialogCostosPostCosecha
 *
 * @author fbobbio
 * @version 07-feb-2010
 */
public class DialogCostosPostCosecha extends javax.swing.JDialog
{
    private EventControl evt;
    private Siembra siembra;

    /** Creates new form DialogCostosPostCosecha */
    public DialogCostosPostCosecha(Window parent, boolean modal, Siembra s)
    {
        super(parent);
        setModal(modal);
        setTitle("Costos de Comercialización");
        siembra = s;
        GUIUtility.initWindow(this);
        initComponents();
        evt = new EventControl();
        oKCancelCleanPanel1.setListenerToButtons(evt);
        panelCostosPostCosecha1.setFrameNotifier(frameNotifier1);
        panelCostosPostCosecha1.setCostosCargados(s.getCostosPostCosecha());
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelCostosPostCosecha1 = new ar.com.init.agros.view.components.panels.PanelCostosPostCosecha();
        oKCancelCleanPanel1 = new ar.com.init.agros.util.gui.components.buttons.OKCancelCleanPanel();
        frameNotifier1 = new ar.com.init.agros.util.gui.validation.components.FrameNotifier();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .add(oKCancelCleanPanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 616, Short.MAX_VALUE))
            .add(layout.createSequentialGroup()
                .add(panelCostosPostCosecha1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 616, Short.MAX_VALUE)
                .addContainerGap())
            .add(frameNotifier1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 626, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(frameNotifier1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(panelCostosPostCosecha1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 199, Short.MAX_VALUE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(oKCancelCleanPanel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /** Clase de control de eventos que maneja los eventos de la GUI DialogCostosPostCosecha y las validaciones de la misma */
    public class EventControl extends AbstractEventControl implements ActionListener
    {

        /** Método que maneja los eventos de la GUI DialogCostosPostCosecha
         *  @param e el evento de acción lanzado por algún componente de la GUI
         */
        @Override
        public void actionPerformed(ActionEvent e)
        {
            if (e.getSource() == oKCancelCleanPanel1.getBtnAceptar()) {
                siembra.setCostosPostCosecha(panelCostosPostCosecha1.getCostosCargados());
                clear();
                closeWindow(DialogCostosPostCosecha.this);
            }
            if (e.getSource() == oKCancelCleanPanel1.getBtnCancelar()) {
                clear();
                closeWindow(DialogCostosPostCosecha.this);
            }
            if (e.getSource() == oKCancelCleanPanel1.getBtnClean()) {
                clear();
            }
        }

        @Override
        public FrameNotifier getFrameNotifier()
        {
            return frameNotifier1;
        }
    }

    private void clear()
    {
        panelCostosPostCosecha1.clear();
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private ar.com.init.agros.util.gui.validation.components.FrameNotifier frameNotifier1;
    private ar.com.init.agros.util.gui.components.buttons.OKCancelCleanPanel oKCancelCleanPanel1;
    private ar.com.init.agros.view.components.panels.PanelCostosPostCosecha panelCostosPostCosecha1;
    // End of variables declaration//GEN-END:variables
}
