/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * SuperficiesReportCriteria.java
 *
 * Created on 08/07/2009, 22:19:46
 */
package ar.com.init.agros.view.reporting;

import ar.com.init.agros.controller.CampoJpaController;
import ar.com.init.agros.model.Campania;
import ar.com.init.agros.model.terreno.Campo;
import ar.com.init.agros.model.terreno.Superficie;
import ar.com.init.agros.reporting.components.ReportCriteria;
import ar.com.init.agros.util.gui.validation.components.FrameNotifier;
import java.util.ArrayList;
import java.util.List;
import javax.swing.event.ListDataEvent;
import javax.swing.event.ListDataListener;

/**
 *
 * @author gmatheu
 */
public class SuperficiesReportCriteria extends javax.swing.JPanel implements ReportCriteria
{

    private static final long serialVersionUID = -1L;
    private CampaniasReportCriteria campaniaReportCriteria;
    private boolean useTrabajos;
    private boolean usePlanificaciones;
    private boolean useSiembras;

    /** Creates new form SuperficiesReportCriteria */
    @SuppressWarnings("unchecked")
    public SuperficiesReportCriteria(FrameNotifier frameNotifier)
    {
        initComponents();
        panelSeleccionLotes.setFrameNotifier(frameNotifier);

        campoReportCriteria1.addAvailableDataListener(new ListDataListener()
        {

            @Override
            public void intervalAdded(ListDataEvent e)
            {
                if (campoReportCriteria1.getSelected().size() == 1) {
                    Campo campo = (Campo) campoReportCriteria1.getSelected(0); //TODO: Permitir seleccionar lotes de mas campos.
                    panelSeleccionLotes.setCampoSeleccionado(campo);
                }
                else {
                    panelSeleccionLotes.clear();
                }
            }

            @Override
            public void intervalRemoved(ListDataEvent e)
            {
                if (campoReportCriteria1.getSelected().size() == 1) {
                    Campo campo = (Campo) campoReportCriteria1.getSelected(0); //TODO: Permitir seleccionar lotes de mas campos.
                    panelSeleccionLotes.setCampoSeleccionado(campo);
                }
                else {
                    panelSeleccionLotes.clear();
                }
            }

            @Override
            public void contentsChanged(ListDataEvent e)
            {
            }
        });
    }

    public SuperficiesReportCriteria(FrameNotifier fm, CampaniasReportCriteria campaniaReportCriteria, boolean useTrabajos, boolean usePlanificaciones, boolean useSiembras)
    {
        this(fm);
        this.campaniaReportCriteria = campaniaReportCriteria;
        this.usePlanificaciones = usePlanificaciones;
        this.useTrabajos = useTrabajos;
    }

    @SuppressWarnings("unchecked")
    public List<Superficie> getSelectedSuperficies()
    {
        if (campoReportCriteria1.getSelected().size() == 1) {
            return panelSeleccionLotes.getSelectedSuperficies();
        }
        else {
            return new ArrayList<Superficie>(campoReportCriteria1.getSelected());
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelSeleccionLotes = new ar.com.init.agros.view.components.panels.PanelSeleccionLotesSublotes();
        campoReportCriteria1 = new ar.com.init.agros.view.reporting.CampoReportCriteria();

        setName("Form"); // NOI18N
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });

        panelSeleccionLotes.setName("panelSeleccionLotes"); // NOI18N

        campoReportCriteria1.setName("campoReportCriteria1"); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelSeleccionLotes, javax.swing.GroupLayout.DEFAULT_SIZE, 620, Short.MAX_VALUE)
            .addComponent(campoReportCriteria1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(campoReportCriteria1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelSeleccionLotes, javax.swing.GroupLayout.DEFAULT_SIZE, 189, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void formComponentShown(java.awt.event.ComponentEvent evt)//GEN-FIRST:event_formComponentShown
    {//GEN-HEADEREND:event_formComponentShown
        if (campaniaReportCriteria != null && campaniaReportCriteria.validateSelection()) {
            List<Campania> campanias = campaniaReportCriteria.getSelected();

            campoReportCriteria1.clearAvailable();
            CampoJpaController campController = new CampoJpaController();

            campoReportCriteria1.addAvailable(campController.findByCampanias(campanias, useTrabajos,
                    usePlanificaciones, useSiembras));
        }
    }//GEN-LAST:event_formComponentShown

    @Override
    public boolean validateSelection()
    {
        return getSelectedSuperficies().size() > 0;
    }

    @Override
    public void clear()
    {
        campoReportCriteria1.removeAllSelected();
        panelSeleccionLotes.clear();
    }

    @Override
    public String getTabTitle()
    {
        return "Establecimientos";
    }

    @Override
    public String getErrorMessage()
    {
        return "Debe seleccionar por lo menos un establecimiento.";
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private ar.com.init.agros.view.reporting.CampoReportCriteria campoReportCriteria1;
    private ar.com.init.agros.view.components.panels.PanelSeleccionLotesSublotes panelSeleccionLotes;
    // End of variables declaration//GEN-END:variables
}
