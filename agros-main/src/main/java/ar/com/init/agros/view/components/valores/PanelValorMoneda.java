/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * Clase visual para usar cuando haya que ingresar valores monetarios
 *
 * Created on 11/06/2009, 23:02:28
 */
package ar.com.init.agros.view.components.valores;

import ar.com.init.agros.model.Divisa;
import ar.com.init.agros.model.ValorMoneda;
import ar.com.init.agros.util.gui.GUIUtility;
import ar.com.init.agros.util.gui.validation.components.FrameNotifier;
import ar.com.init.agros.util.gui.validation.inputverifiers.DecimalInputVerifier;
import ar.com.init.agros.view.components.FocusPanelValorMonedaListener;
import java.util.ArrayList;
import java.util.List;
import javax.persistence.PersistenceException;
import javax.swing.InputVerifier; 
import javax.swing.JTextField;

/**
 *
 * @author gmatheu
 */
public class PanelValorMoneda extends javax.swing.JPanel
{

    private static final long serialVersionUID = -1L;
    private ValorMoneda valorMoneda;
    private FrameNotifier frameNotifier;
    private List<FocusPanelValorMonedaListener> focusListeners;
    private String label = null;

    /** Creates new form PanelValorMoneda */
    public PanelValorMoneda()
    {
        initComponents();

        try 
        {
            setLabelDivisa();
        }
        catch (PersistenceException e)
        {
            if (frameNotifier != null)
            {
                frameNotifier.showErrorMessage(e.getLocalizedMessage());
            }
            GUIUtility.logPersistenceError(PanelValorMoneda.class, e);
        }
    }

    public String getLabel()
    {
        return label;
    }

    public void setLabel(String label)
    {
        this.label = label;
        setLabelDivisa();
    }

    public JTextField getjTextFieldMonto()
    {
        return jTextFieldMonto;
    }

    public void setjTextFieldMonto(JTextField jTextFieldMonto)
    {
        this.jTextFieldMonto = jTextFieldMonto;
    }

    public void fillValue(ValorMoneda valorMoneda)
    {
        valorMoneda.setFormattedValue(jTextFieldMonto.getText());
    }

    public ValorMoneda getValorMoneda()
    {
        if (valorMoneda == null) {
            valorMoneda = new ValorMoneda();
        }

        fillValue(valorMoneda);

        if (!valorMoneda.isValid()) {
            return null;
        }

        return valorMoneda;
    }

    public void setLabelDivisa()
    {
        if (label == null)
        {
            this.jLabelDivisa.setText(Divisa.getPatron().getAbreviatura());
        }
        else
        {
            this.jLabelDivisa.setText(label);
        }
    }

    public void setValorMoneda(ValorMoneda valorMoneda)
    {
        if (valorMoneda == null) 
        {
            jTextFieldMonto.setText("0");
            setLabelDivisa();
        }
        else
        {
            if (valorMoneda.isValid())
            {
                jTextFieldMonto.setText(valorMoneda.getFormattedValue());
                setLabelDivisa();
            }
            else
            {
                jTextFieldMonto.setText("0");
                setLabelDivisa();
            }
        }
        this.valorMoneda = valorMoneda;
    }

    public FrameNotifier getFrameNotifier()
    {
        return frameNotifier;
    }

    public void setFrameNotifier(FrameNotifier frameNotifier)
    {
        this.frameNotifier = frameNotifier;
        jTextFieldMonto.setInputVerifier(new DecimalInputVerifier(frameNotifier, false));
    }

    @Override
    public InputVerifier getInputVerifier()
    {
        return this.jTextFieldMonto.getInputVerifier();
    }

    @Override
    public void setInputVerifier(InputVerifier inputVerifier)
    {
        this.jTextFieldMonto.setInputVerifier(inputVerifier);
    }

    @Override
    public void setEnabled(boolean enabled)
    {
        jTextFieldMonto.setEnabled(enabled);
    }

    public void clear()
    {
        valorMoneda = null;
        jTextFieldMonto.setText("");
    }

    public boolean verify()
    {
        return (getInputVerifier() != null ? getInputVerifier().verify(jTextFieldMonto) : true);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabelDivisa = new javax.swing.JLabel();
        jTextFieldMonto = new javax.swing.JTextField();

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(ar.com.init.agros.view.Application.class).getContext().getResourceMap(PanelValorMoneda.class);
        jLabelDivisa.setText(resourceMap.getString("jLabelDivisa.text")); // NOI18N

        jTextFieldMonto.setText(resourceMap.getString("jTextFieldMonto.text")); // NOI18N
        jTextFieldMonto.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextFieldMontoFocusLost(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabelDivisa, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextFieldMonto, javax.swing.GroupLayout.DEFAULT_SIZE, 143, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabelDivisa, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(jTextFieldMonto, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jTextFieldMontoFocusLost(java.awt.event.FocusEvent evt)//GEN-FIRST:event_jTextFieldMontoFocusLost
    {//GEN-HEADEREND:event_jTextFieldMontoFocusLost
        notifyFocusPanelValorMonedaListeners();
    }//GEN-LAST:event_jTextFieldMontoFocusLost

    /** Método que se encarga de añadir un listener de cambio de selección de superficie
     *  @param listener el objeto que depende del sujeto
     */
    public void addFocusPanelValorMonedaListener(FocusPanelValorMonedaListener listener)
    {
        if (listener == null) {
            return;
        }
        if (focusListeners == null || focusListeners.size() == 0) {
            focusListeners = new ArrayList<FocusPanelValorMonedaListener>();
        }
        focusListeners.add(listener);
    }

    public boolean removeFocusPanelValorMonedaListener(FocusPanelValorMonedaListener listener)
    {
        if (focusListeners == null || focusListeners.size() == 0) {
            return false;
        }
        else {
            return focusListeners.remove(listener);
        }
    }

    public void notifyFocusPanelValorMonedaListeners()
    {
        for (int i = 0; focusListeners != null && i < focusListeners.size(); i++) {
            if (focusListeners.get(i) != null) {
                focusListeners.get(i).focusLost(getValorMoneda());
            }
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabelDivisa;
    private javax.swing.JTextField jTextFieldMonto;
    // End of variables declaration//GEN-END:variables
}
