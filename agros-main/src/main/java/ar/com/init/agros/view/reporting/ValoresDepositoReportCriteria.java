/*
 * ValoresDepositoReportCriteria.java
 *
 * Created on 12/08/2009, 23:15:50
 */
package ar.com.init.agros.view.reporting;

import ar.com.init.agros.model.Agroquimico;
import ar.com.init.agros.model.almacenamiento.Deposito;
import ar.com.init.agros.model.almacenamiento.ValorAgroquimico;
import ar.com.init.agros.reporting.components.ReportCriteria;
import java.util.ArrayList;
import java.util.List;
import javax.swing.event.ListDataEvent;
import javax.swing.event.ListDataListener;

/**
 *
 * @author gmatheu
 */
public class ValoresDepositoReportCriteria extends javax.swing.JPanel implements ReportCriteria
{

    private static final long serialVersionUID = -1L;

    /** Creates new form ValoresDepositoReportCriteria */
    public ValoresDepositoReportCriteria()
    {
        initComponents();

        depositosReportCriteria.addSelectedDataListener(new ListDataListener()
        {

            @Override
            @SuppressWarnings("unchecked")
            public void intervalAdded(ListDataEvent e)
            {
                for (int i = e.getIndex0(); i <= e.getIndex1(); i++) {
                    Deposito deposito = depositosReportCriteria.getSelected(i);
                    dualListAgroquimicos.addAvailable(deposito.getAgroquimicos());
                }
            }

            @Override
            public void intervalRemoved(ListDataEvent e)
            {
            }

            @Override
            public void contentsChanged(ListDataEvent e)
            {
            }
        });

        depositosReportCriteria.addAvailableDataListener(new ListDataListener()
        {

            @Override
            @SuppressWarnings("unchecked")
            public void intervalAdded(ListDataEvent e)
            {
                List<Agroquimico> agrosSelected = dualListAgroquimicos.getSelected();
                for (int i = e.getIndex0(); i <= e.getIndex1(); i++) {
                    Deposito deposito = depositosReportCriteria.getAvailable(i);

                    dualListAgroquimicos.deleteSelected(deposito.getAgroquimicos());
                    dualListAgroquimicos.deleteAvailable(deposito.getAgroquimicos());
                }

                List<Agroquimico> agrosToSelect = new ArrayList<Agroquimico>();

                for (Deposito deposito : depositosReportCriteria.getSelected()) {
                    dualListAgroquimicos.addAvailable(deposito.getAgroquimicos());
                    for (Agroquimico agroquimico : deposito.getAgroquimicos()) {

                        if (agrosSelected.contains(agroquimico)) {
                            agrosToSelect.add(agroquimico);
                        }
                    }
                }
                dualListAgroquimicos.addSelected(agrosToSelect);

            }

            @Override
            public void intervalRemoved(ListDataEvent e)
            {
            }

            @Override
            public void contentsChanged(ListDataEvent e)
            {
            }
        });
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        dualListAgroquimicos = new ar.com.init.agros.util.gui.components.list.DualList();
        depositosReportCriteria = new ar.com.init.agros.view.reporting.DepositosReportCriteria();

        setName("Form"); // NOI18N

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(ar.com.init.agros.view.Application.class).getContext().getResourceMap(ValoresDepositoReportCriteria.class);
        dualListAgroquimicos.setBorder(javax.swing.BorderFactory.createTitledBorder(resourceMap.getString("dualListAgroquimicos.border.title"))); // NOI18N
        dualListAgroquimicos.setName("dualListAgroquimicos"); // NOI18N

        depositosReportCriteria.setBorder(javax.swing.BorderFactory.createTitledBorder(resourceMap.getString("depositosReportCriteria.border.title"))); // NOI18N
        depositosReportCriteria.setName("depositosReportCriteria"); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(depositosReportCriteria, javax.swing.GroupLayout.DEFAULT_SIZE, 640, Short.MAX_VALUE)
            .addComponent(dualListAgroquimicos, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 640, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(depositosReportCriteria, javax.swing.GroupLayout.DEFAULT_SIZE, 224, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(dualListAgroquimicos, javax.swing.GroupLayout.DEFAULT_SIZE, 335, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private ar.com.init.agros.view.reporting.DepositosReportCriteria depositosReportCriteria;
    private ar.com.init.agros.util.gui.components.list.DualList dualListAgroquimicos;
    // End of variables declaration//GEN-END:variables

    @Override
    public boolean validateSelection()
    {
        return dualListAgroquimicos.getSelected().size() > 0;
    }

    @Override
    public void clear()
    {
        dualListAgroquimicos.removeAllSelected();
        depositosReportCriteria.removeAllSelected();
    }

    @Override
    public String getTabTitle()
    {
        return "Depositos - Agroquímicos";
    }

    @Override
    public String getErrorMessage()
    {
        return "Debe seleccionar por lo menos un Agroquímico";
    }

    @SuppressWarnings("unchecked")
    public List<ValorAgroquimico> getValoresDeposito()
    {
        List<Agroquimico> agros = dualListAgroquimicos.getSelected();
        List<Deposito> depos = depositosReportCriteria.getSelected();

        List<ValorAgroquimico> r = new ArrayList<ValorAgroquimico>();

        for (Deposito deposito : depos) {
            for (Agroquimico agroquimico : agros) {
                r.add(deposito.getValorDeposito(agroquimico));
            }
        }

        return r;
    }

    public List<Deposito> getDepositos()
    {
        return depositosReportCriteria.getSelected();
    }
}
