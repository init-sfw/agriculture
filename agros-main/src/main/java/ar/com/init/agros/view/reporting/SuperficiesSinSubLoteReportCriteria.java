/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * SuperficiesSinSubLoteReportCriteria.java
 *
 * Created on 27-ago-2009, 19:53:03
 */
package ar.com.init.agros.view.reporting;

import ar.com.init.agros.controller.base.BaseEntityJpaController;
import ar.com.init.agros.controller.CampoJpaController;
import ar.com.init.agros.model.Campania;
import ar.com.init.agros.model.terreno.Campo;
import ar.com.init.agros.model.terreno.Lote;
import ar.com.init.agros.reporting.components.ReportCriteria;
import ar.com.init.agros.util.gui.validation.components.FrameNotifier;
import java.util.ArrayList;
import java.util.List;
import javax.swing.event.ListDataEvent;
import javax.swing.event.ListDataListener;

/**
 *
 * @author fbobbio
 */
public class SuperficiesSinSubLoteReportCriteria extends javax.swing.JPanel implements ReportCriteria
{

    private static final long serialVersionUID = -1L;
    private FrameNotifier frameNotifier;
    private CampaniasReportCriteria campaniaReportCriteria;
    private boolean useTrabajos;
    private boolean usePlanificaciones;
    private boolean useSiembras;

    /** Creates new form SuperficiesSinSubLoteReportCriteria */
    public SuperficiesSinSubLoteReportCriteria(FrameNotifier frameNotifier)
    {
        this.frameNotifier = frameNotifier;
        initComponents();
        panelSeleccionLote1.setFrameNotifier1(this.frameNotifier);

        CampoJpaController campoJpaController = new CampoJpaController();
        dualListCampo.addAvailable(campoJpaController.findAllEntities());

        dualListCampo.addAvailableDataListener(new ListDataListener()
        {

            @Override
            public void intervalAdded(ListDataEvent e)
            {
                if (dualListCampo.getSelected().size() == 1) {
                    Campo campo = (Campo) dualListCampo.getSelected(0); //TODO: Permitir seleccionar lotes de mas campos.
                    panelSeleccionLote1.setData(campo.getLotes());
                }
                else {
                    panelSeleccionLote1.clear();
                }
            }

            @Override
            public void intervalRemoved(ListDataEvent e)
            {
                if (dualListCampo.getSelected().size() == 1) {
                    Campo campo = (Campo) dualListCampo.getSelected(0); //TODO: Permitir seleccionar lotes de mas campos.
                    panelSeleccionLote1.setData(campo.getLotes());
                }
                else {
                    panelSeleccionLote1.clear();
                }
            }

            @Override
            public void contentsChanged(ListDataEvent e)
            {
            }
        });
    }

    public SuperficiesSinSubLoteReportCriteria(FrameNotifier fm, CampaniasReportCriteria campaniaReportCriteria, boolean useTrabajos, boolean usePlanificaciones, boolean useSiembras)
    {
        this(fm);
        this.campaniaReportCriteria = campaniaReportCriteria;
        this.usePlanificaciones = usePlanificaciones;
        this.useTrabajos = useTrabajos;
    }

    @SuppressWarnings({"unchecked"})
    public List<Lote> getSelectedSuperficies()
    {
        if (dualListCampo.getSelected().size() == 1) {
            return panelSeleccionLote1.getCheckedLotes();
        }
        else {
            List<Lote> aux = new ArrayList<Lote>();
            for (Campo c : (List<Campo>) dualListCampo.getSelected()) {
                aux.addAll(c.getLotes());
            }
            return aux;
        }
    }

    @Override
    public boolean validateSelection()
    {
        return getSelectedSuperficies().size() > 0;
    }

    @Override
    public void clear()
    {
        dualListCampo.removeAllSelected();
        panelSeleccionLote1.clear();
    }

    @Override
    public String getTabTitle()
    {
        return "Establecimientos";
    }

    @Override
    public String getErrorMessage()
    {
        return "Debe seleccionar por lo menos un establecimiento.";
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        dualListCampo = new ar.com.init.agros.util.gui.components.list.DualList();
        panelSeleccionLote1 = new ar.com.init.agros.view.components.panels.PanelSeleccionLote();

        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(ar.com.init.agros.view.Application.class).getContext().getResourceMap(SuperficiesSinSubLoteReportCriteria.class);
        panelSeleccionLote1.setBorder(javax.swing.BorderFactory.createTitledBorder(resourceMap.getString("panelSeleccionLote1.border.title"))); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(dualListCampo, javax.swing.GroupLayout.DEFAULT_SIZE, 630, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelSeleccionLote1, javax.swing.GroupLayout.DEFAULT_SIZE, 620, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(dualListCampo, javax.swing.GroupLayout.DEFAULT_SIZE, 172, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelSeleccionLote1, javax.swing.GroupLayout.DEFAULT_SIZE, 213, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void formComponentShown(java.awt.event.ComponentEvent evt)//GEN-FIRST:event_formComponentShown
    {//GEN-HEADEREND:event_formComponentShown
        if (campaniaReportCriteria != null && campaniaReportCriteria.validateSelection()) {
            List<Campania> campanias = campaniaReportCriteria.getSelected();

            dualListCampo.clearAvailable();
            CampoJpaController campController = new CampoJpaController();

            dualListCampo.addAvailable(campController.findByCampanias(campanias, useTrabajos,
                    usePlanificaciones, useSiembras));

        }
    }//GEN-LAST:event_formComponentShown
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private ar.com.init.agros.util.gui.components.list.DualList dualListCampo;
    private ar.com.init.agros.view.components.panels.PanelSeleccionLote panelSeleccionLote1;
    // End of variables declaration//GEN-END:variables
}
