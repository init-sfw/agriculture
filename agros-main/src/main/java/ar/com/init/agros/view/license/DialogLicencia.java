/*
 * DialogLicencia.java
 *
 * Created on 08/08/2009, 21:31:08
 */
package ar.com.init.agros.view.license;

import ar.com.init.agros.license.LicenseVerifier;
import ar.com.init.agros.view.Application;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.text.BadLocationException;
import javax.swing.text.SimpleAttributeSet;
import javax.swing.text.StyleConstants;
import javax.swing.text.StyledDocument;
import org.jdesktop.application.Action;
import org.xito.dialog.DialogManager;

/**
 * 
 * @author gmatheu
 */
public class DialogLicencia extends javax.swing.JDialog {

	private static final long serialVersionUID = -1L;
	private boolean validated;
	private JFileChooser fileChooser;

	/** Creates new form DialogLicencia */
	private DialogLicencia(java.awt.Frame parent) {
		super(parent, true);
		initComponents();
		this.setLocationRelativeTo(null);

		validated = false;

		fileChooser = new JFileChooser();
		fileChooser.setAcceptAllFileFilterUsed(false);
		fileChooser.setMultiSelectionEnabled(false);
		fileChooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
		fileChooser.addChoosableFileFilter(new FileNameExtensionFilter(
				"Archivos de Licencia", "lic"));

		try {
			SimpleAttributeSet title = new SimpleAttributeSet();
			StyleConstants.setBold(title, true);
			StyleConstants.setFontSize(title, 36);
			StyleConstants.setAlignment(title, StyleConstants.ALIGN_CENTER);

			SimpleAttributeSet bigText = new SimpleAttributeSet();
			StyleConstants.setBold(bigText, true);
			StyleConstants.setFontSize(bigText, 16);
			StyleConstants
					.setAlignment(bigText, StyleConstants.ALIGN_JUSTIFIED);

			SimpleAttributeSet content = new SimpleAttributeSet();
			StyleConstants.setBold(content, false);
			StyleConstants.setFontSize(content, 14);
			StyleConstants
					.setAlignment(content, StyleConstants.ALIGN_JUSTIFIED);

			StyledDocument doc = (StyledDocument) jTextPaneLicencia
					.getDocument();

			doc.insertString(doc.getLength(), "\t\tBienvenido a Osiris" + "\n",
					title);
			doc.insertString(doc.getLength(),
					"\t\tprovisto por www.campoportunidades.com" + "\n\n",
					content);

			doc.insertString(
					doc.getLength(),
					"   Esta es la primera vez que ejecuta el programa y necesita proveer la licencia del mismo."
							+ "\n\n", content);
			doc.insertString(doc.getLength(),
					"   Para adquirir una licencia puede:" + "\n", content);
			doc.insertString(
					doc.getLength(),
					"\tLlamar al 03547-15578567 de Lunes a Viernes de 9:00 a 12:00 y 16:00 a 20:00 hs."
							+ "\n", bigText);
			doc.insertString(doc.getLength(), "   \to" + "\n", content);
			doc.insertString(
					doc.getLength(),
					"\tSolicitarlo via correo electrónico al osiris@campoportunidades.com detallando el código provisto."
							+ "\n", bigText);

			doc.insertString(doc.getLength(), "\n\n", bigText);
			doc.insertString(
					doc.getLength(),
					"   Si ya posee un archivo de licencia, por favor selecciónelo y luego presione el botón aceptar"
							+ "\n", bigText);

			jTextFieldCodigo.setText(LicenseVerifier.getInstance()
					.generateUniqueKey());
		} catch (BadLocationException ex) {
			Logger.getLogger(DialogLicencia.class.getName()).log(Level.SEVERE,
					null, ex);
		}
	}

	public static boolean validateLicense(java.awt.Frame parent) {
		OSValidator osValidator = new OSValidator();

		if (osValidator.isWindows()) {
			try {
				LicenseVerifier.getInstance().installLicense();
			} catch (Exception ex) {
				DialogLicencia lic = new DialogLicencia(parent);
				lic.setVisible(true);
				return lic.isValidated();
			}
		}
		return true;
	}

	public boolean isValidated() {
		return validated;
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed"
	// desc="Generated Code">//GEN-BEGIN:initComponents
	private void initComponents() {

		jPanelBotones = new javax.swing.JPanel();
		jButtonAceptar = new javax.swing.JButton();
		jButtonSalir = new javax.swing.JButton();
		jPanelContenido = new javax.swing.JPanel();
		jLabelArchivoLicencia = new javax.swing.JLabel();
		jLabelCodigo = new javax.swing.JLabel();
		jTextFieldArchivoLicencia = new javax.swing.JTextField();
		jTextFieldCodigo = new javax.swing.JTextField();
		jScrollPane1 = new javax.swing.JScrollPane();
		jTextPaneLicencia = new javax.swing.JTextPane();
		jButtonExaminar = new javax.swing.JButton();
		jPanel1 = new javax.swing.JPanel();
		jLabel1 = new javax.swing.JLabel();

		setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
		org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application
				.getInstance(ar.com.init.agros.view.Application.class)
				.getContext().getResourceMap(DialogLicencia.class);
		setTitle(resourceMap.getString("Form.title")); // NOI18N
		setAlwaysOnTop(true);
		setModal(true);
		setName("Form"); // NOI18N
		setResizable(false);

		jPanelBotones.setBorder(javax.swing.BorderFactory.createEtchedBorder());
		jPanelBotones.setName("jPanelBotones"); // NOI18N

		javax.swing.ActionMap actionMap = org.jdesktop.application.Application
				.getInstance(ar.com.init.agros.view.Application.class)
				.getContext().getActionMap(DialogLicencia.class, this);
		jButtonAceptar.setAction(actionMap.get("aceptar")); // NOI18N
		jButtonAceptar.setIcon(resourceMap.getIcon("jButtonAceptar.icon")); // NOI18N
		jButtonAceptar.setText(resourceMap.getString("jButtonAceptar.text")); // NOI18N
		jButtonAceptar.setName("jButtonAceptar"); // NOI18N

		jButtonSalir.setAction(actionMap.get("salir")); // NOI18N
		jButtonSalir.setIcon(resourceMap.getIcon("jButtonSalir.icon")); // NOI18N
		jButtonSalir.setText(resourceMap.getString("jButtonSalir.text")); // NOI18N
		jButtonSalir.setName("jButtonSalir"); // NOI18N

		javax.swing.GroupLayout jPanelBotonesLayout = new javax.swing.GroupLayout(
				jPanelBotones);
		jPanelBotones.setLayout(jPanelBotonesLayout);
		jPanelBotonesLayout
				.setHorizontalGroup(jPanelBotonesLayout
						.createParallelGroup(
								javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(
								jPanelBotonesLayout
										.createSequentialGroup()
										.addGap(185, 185, 185)
										.addComponent(
												jButtonAceptar,
												javax.swing.GroupLayout.PREFERRED_SIZE,
												107,
												javax.swing.GroupLayout.PREFERRED_SIZE)
										.addPreferredGap(
												javax.swing.LayoutStyle.ComponentPlacement.RELATED)
										.addComponent(
												jButtonSalir,
												javax.swing.GroupLayout.PREFERRED_SIZE,
												113,
												javax.swing.GroupLayout.PREFERRED_SIZE)
										.addContainerGap(279, Short.MAX_VALUE)));

		jPanelBotonesLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL,
				new java.awt.Component[] { jButtonAceptar, jButtonSalir });

		jPanelBotonesLayout
				.setVerticalGroup(jPanelBotonesLayout
						.createParallelGroup(
								javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(
								javax.swing.GroupLayout.Alignment.TRAILING,
								jPanelBotonesLayout
										.createSequentialGroup()
										.addContainerGap(
												javax.swing.GroupLayout.DEFAULT_SIZE,
												Short.MAX_VALUE)
										.addGroup(
												jPanelBotonesLayout
														.createParallelGroup(
																javax.swing.GroupLayout.Alignment.BASELINE)
														.addComponent(
																jButtonSalir,
																javax.swing.GroupLayout.PREFERRED_SIZE,
																36,
																javax.swing.GroupLayout.PREFERRED_SIZE)
														.addComponent(
																jButtonAceptar,
																javax.swing.GroupLayout.PREFERRED_SIZE,
																32,
																javax.swing.GroupLayout.PREFERRED_SIZE))
										.addContainerGap()));

		jPanelBotonesLayout.linkSize(javax.swing.SwingConstants.VERTICAL,
				new java.awt.Component[] { jButtonAceptar, jButtonSalir });

		jPanelContenido.setName("jPanelContenido"); // NOI18N

		jLabelArchivoLicencia.setText(resourceMap
				.getString("jLabelArchivoLicencia.text")); // NOI18N
		jLabelArchivoLicencia.setName("jLabelArchivoLicencia"); // NOI18N

		jLabelCodigo.setText(resourceMap.getString("jLabelCodigo.text")); // NOI18N
		jLabelCodigo.setName("jLabelCodigo"); // NOI18N

		jTextFieldArchivoLicencia.setEditable(false);
		jTextFieldArchivoLicencia.setName("jTextFieldArchivoLicencia"); // NOI18N

		jTextFieldCodigo.setEditable(false);
		jTextFieldCodigo
				.setText(resourceMap.getString("jTextFieldCodigo.text")); // NOI18N
		jTextFieldCodigo.setName("jTextFieldCodigo"); // NOI18N

		jScrollPane1.setName("jScrollPane1"); // NOI18N

		jTextPaneLicencia.setBackground(resourceMap
				.getColor("jTextPaneLicencia.background")); // NOI18N
		jTextPaneLicencia.setBorder(null);
		jTextPaneLicencia.setEditable(false);
		jTextPaneLicencia.setForeground(resourceMap
				.getColor("jTextPaneLicencia.foreground")); // NOI18N
		jTextPaneLicencia.setName("jTextPaneLicencia"); // NOI18N
		jScrollPane1.setViewportView(jTextPaneLicencia);

		jButtonExaminar.setAction(actionMap.get("examinar")); // NOI18N
		jButtonExaminar.setText(resourceMap.getString("jButtonExaminar.text")); // NOI18N
		jButtonExaminar.setName("jButtonExaminar"); // NOI18N

		jPanel1.setBackground(resourceMap.getColor("jPanel1.background")); // NOI18N
		jPanel1.setName("jPanel1"); // NOI18N

		jLabel1.setBackground(resourceMap.getColor("jLabel1.background")); // NOI18N
		jLabel1.setIcon(resourceMap.getIcon("jLabel1.icon")); // NOI18N
		jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
		jLabel1.setName("jLabel1"); // NOI18N
		jPanel1.add(jLabel1);

		javax.swing.GroupLayout jPanelContenidoLayout = new javax.swing.GroupLayout(
				jPanelContenido);
		jPanelContenido.setLayout(jPanelContenidoLayout);
		jPanelContenidoLayout
				.setHorizontalGroup(jPanelContenidoLayout
						.createParallelGroup(
								javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(
								javax.swing.GroupLayout.Alignment.TRAILING,
								jPanelContenidoLayout
										.createSequentialGroup()
										.addGap(19, 19, 19)
										.addGroup(
												jPanelContenidoLayout
														.createParallelGroup(
																javax.swing.GroupLayout.Alignment.TRAILING)
														.addComponent(
																jLabelCodigo)
														.addComponent(
																jLabelArchivoLicencia))
										.addPreferredGap(
												javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
										.addGroup(
												jPanelContenidoLayout
														.createParallelGroup(
																javax.swing.GroupLayout.Alignment.LEADING)
														.addGroup(
																javax.swing.GroupLayout.Alignment.TRAILING,
																jPanelContenidoLayout
																		.createSequentialGroup()
																		.addComponent(
																				jTextFieldArchivoLicencia,
																				javax.swing.GroupLayout.DEFAULT_SIZE,
																				471,
																				Short.MAX_VALUE)
																		.addPreferredGap(
																				javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																		.addComponent(
																				jButtonExaminar))
														.addComponent(
																jTextFieldCodigo,
																javax.swing.GroupLayout.DEFAULT_SIZE,
																566,
																Short.MAX_VALUE))
										.addContainerGap())
						.addComponent(jPanel1,
								javax.swing.GroupLayout.DEFAULT_SIZE, 700,
								Short.MAX_VALUE)
						.addComponent(jScrollPane1,
								javax.swing.GroupLayout.Alignment.TRAILING,
								javax.swing.GroupLayout.DEFAULT_SIZE, 700,
								Short.MAX_VALUE));
		jPanelContenidoLayout
				.setVerticalGroup(jPanelContenidoLayout
						.createParallelGroup(
								javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(
								javax.swing.GroupLayout.Alignment.TRAILING,
								jPanelContenidoLayout
										.createSequentialGroup()
										.addComponent(
												jPanel1,
												javax.swing.GroupLayout.PREFERRED_SIZE,
												javax.swing.GroupLayout.DEFAULT_SIZE,
												javax.swing.GroupLayout.PREFERRED_SIZE)
										.addPreferredGap(
												javax.swing.LayoutStyle.ComponentPlacement.RELATED)
										.addComponent(
												jScrollPane1,
												javax.swing.GroupLayout.DEFAULT_SIZE,
												279, Short.MAX_VALUE)
										.addPreferredGap(
												javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
										.addGroup(
												jPanelContenidoLayout
														.createParallelGroup(
																javax.swing.GroupLayout.Alignment.BASELINE)
														.addComponent(
																jLabelCodigo)
														.addComponent(
																jTextFieldCodigo,
																javax.swing.GroupLayout.PREFERRED_SIZE,
																javax.swing.GroupLayout.DEFAULT_SIZE,
																javax.swing.GroupLayout.PREFERRED_SIZE))
										.addPreferredGap(
												javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
										.addGroup(
												jPanelContenidoLayout
														.createParallelGroup(
																javax.swing.GroupLayout.Alignment.BASELINE)
														.addComponent(
																jLabelArchivoLicencia)
														.addComponent(
																jTextFieldArchivoLicencia,
																javax.swing.GroupLayout.PREFERRED_SIZE,
																javax.swing.GroupLayout.DEFAULT_SIZE,
																javax.swing.GroupLayout.PREFERRED_SIZE)
														.addComponent(
																jButtonExaminar))
										.addContainerGap()));

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(
				getContentPane());
		getContentPane().setLayout(layout);
		layout.setHorizontalGroup(layout
				.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addComponent(jPanelBotones,
						javax.swing.GroupLayout.DEFAULT_SIZE,
						javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
				.addComponent(jPanelContenido,
						javax.swing.GroupLayout.DEFAULT_SIZE,
						javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE));
		layout.setVerticalGroup(layout
				.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(
						javax.swing.GroupLayout.Alignment.TRAILING,
						layout.createSequentialGroup()
								.addComponent(jPanelContenido,
										javax.swing.GroupLayout.DEFAULT_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE,
										Short.MAX_VALUE)
								.addPreferredGap(
										javax.swing.LayoutStyle.ComponentPlacement.RELATED)
								.addComponent(jPanelBotones,
										javax.swing.GroupLayout.PREFERRED_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE,
										javax.swing.GroupLayout.PREFERRED_SIZE)));

		pack();
	}// </editor-fold>//GEN-END:initComponents

	@Action
	public void salir() {
		validated = false;

		Application.getInstance().quit(null);
	}

	@Action
	public void aceptar() {
		validated = false;
		if (jTextFieldArchivoLicencia.getText().length() == 0) {
			DialogManager.showError(this, "Archivo inexistente",
					"Debe seleccionar el archivo de licencia",
					DialogManager.OK, null);

			return;
		}
		try {
			LicenseVerifier.getInstance().installLicense(
					jTextFieldArchivoLicencia.getText());
		} catch (Exception ex) {

			DialogManager.showError(this, "Licencia No Válida",
					"La licencia ingresada no es válida para esta PC",
					DialogManager.OK, null);

			Logger.getLogger(DialogLicencia.class.getName()).log(Level.SEVERE,
					null, ex);

			return;
		}

		DialogManager.showInfoMessage(this, "Licencia instalada",
				"La licencia fue instalada correctamente.", DialogManager.OK);

		validated = true;
		setVisible(false);
	}

	@Action
	public void examinar() {
		int r = fileChooser.showOpenDialog(this);

		if (r == JFileChooser.APPROVE_OPTION) {
			jTextFieldArchivoLicencia.setText(fileChooser.getSelectedFile()
					.getAbsolutePath());
			jTextFieldArchivoLicencia.setToolTipText(fileChooser
					.getSelectedFile().getAbsolutePath());
		} else {
			jTextFieldArchivoLicencia.setText("");
			jTextFieldArchivoLicencia.setToolTipText("");
		}
	}

	// Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.JButton jButtonAceptar;
	private javax.swing.JButton jButtonExaminar;
	private javax.swing.JButton jButtonSalir;
	private javax.swing.JLabel jLabel1;
	private javax.swing.JLabel jLabelArchivoLicencia;
	private javax.swing.JLabel jLabelCodigo;
	private javax.swing.JPanel jPanel1;
	private javax.swing.JPanel jPanelBotones;
	private javax.swing.JPanel jPanelContenido;
	private javax.swing.JScrollPane jScrollPane1;
	private javax.swing.JTextField jTextFieldArchivoLicencia;
	private javax.swing.JTextField jTextFieldCodigo;
	private javax.swing.JTextPane jTextPaneLicencia;

	// End of variables declaration//GEN-END:variables

	private static class OSValidator {

		public boolean isWindows() {

			String os = System.getProperty("os.name").toLowerCase();
			// windows
			return (os.indexOf("win") >= 0);

		}

		public boolean isMac() {

			String os = System.getProperty("os.name").toLowerCase();
			// Mac
			return (os.indexOf("mac") >= 0);

		}

		public boolean isUnix() {

			String os = System.getProperty("os.name").toLowerCase();
			// linux or unix
			return (os.indexOf("nix") >= 0 || os.indexOf("nux") >= 0);

		}
	}
}
